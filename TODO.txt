 * Make texthighlighter always built in debug whatever the language
 * Make a Search functionality
 * TinyEx in Java and C++
 * Update commented simple expression1.tpg comments to match last features
 * Write documentation
 * Add a IsWarning attribute in the ParseError class
 * Review C++ generated code and improve it (std::any as default???, more use of templates ???)
 * Separate implementation and declaration in C++
 * Make ParseXXX public and find a way for the ParseTree to return the correct type
 * Remove Non terminal default return value (it will be useless once the ParseTree will be able to return the correct type)
 * Add string in addition to regex as TerminalSymbols for performances
 * Make C++, C# and VB searching for terminal token at the beginning of the parsed string only (Java lookingAt equivalent)
 
Prospecting/Long Term:
 * Make Error Codes consistant
 * Add my backtracking parser as a possible implementation (instead of LL(1))
 * Add python and javascript generation
 * Add a Search (and SearchXXX) method (in addition to Parse (and ParseXXX)) in the Parser
 * Port the code to Visual Source Code
 * Remove VB support
 